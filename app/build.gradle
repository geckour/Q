apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlinx-serialization'

apply plugin: 'com.google.firebase.crashlytics'

android {
    def keyNameDropBoxAppKey = "DROPBOX_APP_KEY"
    def keyNameDropBoxAppSecret = "DROPBOX_APP_SECRET"

    compileSdkVersion 31
    defaultConfig {
        applicationId "com.geckour.q"
        minSdkVersion 24
        versionCode 4
        versionName "1.2.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", keyNameDropBoxAppKey, getQuotedKey(keyNameDropBoxAppKey)
        buildConfigField "String", keyNameDropBoxAppSecret, getQuotedKey(keyNameDropBoxAppSecret)

        def filesAuthorityValue = applicationId + ".files"
        buildConfigField "String", "FILES_AUTHORITY", "\"${filesAuthorityValue}\""

        manifestPlaceholders = [
                dropboxAppKey : "db-" + getKey(keyNameDropBoxAppKey),
                filesAuthority: filesAuthorityValue
        ]
    }
    sourceSets.main {
        jniLibs.srcDir 'src/main/libs'
        // Disable the automatic ndk-build call by Android Studio.
    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding.enabled = true
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }
    ndkVersion = "21.0.6113669"
}

static def getKey(keyName) {
    Properties props = new Properties()
    props.load(new FileInputStream(new File("secret.properties")))
    return props[keyName]
}

static def quoted(value) {
    return "\"" + value + "\""
}

static def getQuotedKey(keyName) {
    return quoted(getKey(keyName))
}

repositories {
    maven { url "https://jitpack.io" }
    maven { url "https://dl.bintray.com/ijabz/maven" }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation "androidx.media:media:1.4.1"
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation platform('com.google.firebase:firebase-bom:26.4.0')

    // Logging
    implementation 'com.google.firebase:firebase-core'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Inspect
    def stetho_ver = '1.5.1'
    implementation "com.facebook.stetho:stetho:$stetho_ver"
    implementation "com.facebook.stetho:stetho-okhttp3:$stetho_ver"

    // Coroutines
    def coroutines_ver = '1.5.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_ver"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_ver"

    // JSON
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.2.2"

    // Networking
    def retrofit2_version = "2.9.0"
    def okhttp_version = "4.9.1"
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // AAC ViewModel
    def aac_lifecycle_ver = '2.3.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$aac_lifecycle_ver"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$aac_lifecycle_ver"
    implementation "androidx.lifecycle:lifecycle-common-java8:$aac_lifecycle_ver"
    testImplementation 'androidx.arch.core:core-testing:2.1.0'

    // AAC Room
    def aac_room_ver = '2.3.0'
    implementation "androidx.room:room-runtime:$aac_room_ver"
    implementation "androidx.room:room-ktx:$aac_room_ver"
    kapt "androidx.room:room-compiler:$aac_room_ver"
    testImplementation "androidx.room:room-testing:$aac_room_ver"

    // AndroidX
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation "androidx.browser:browser:1.3.0"

    // KTX
    implementation 'androidx.fragment:fragment-ktx:1.3.6'
    implementation 'androidx.activity:activity-ktx:1.3.1'

    // WorkManager
    implementation 'androidx.work:work-runtime-ktx:2.5.0'

    // Permission
    implementation 'org.permissionsdispatcher:permissionsdispatcher-ktx:1.0.1'

    // Image processing
    def glide_ver = '4.11.0'
    implementation "com.github.bumptech.glide:glide:$glide_ver"
    kapt "com.github.bumptech.glide:compiler:$glide_ver"

    // Player
    implementation project(':exoplayer-library-core')
    implementation project(':exoplayer-extension-ffmpeg')
    compileOnly 'org.checkerframework:checker-qual:3.13.0'
    compileOnly 'org.checkerframework:checker-compat-qual:2.5.5'

    // Vertical SeekBar
    implementation 'com.h6ah4i.android.widget.verticalseekbar:verticalseekbar:1.0.0'

    // Hash
    implementation 'commons-codec:commons-codec:1.11'

    // Dropbox
    implementation 'com.dropbox.core:dropbox-core-sdk:3.1.5'

    // Charset detection
    implementation 'com.googlecode.juniversalchardet:juniversalchardet:1.0.3'
}

apply plugin: 'com.google.gms.google-services'