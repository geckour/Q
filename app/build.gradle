apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

kotlin.experimental.coroutines 'enable'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.geckour.q"
        minSdkVersion 24
        versionCode 2
        versionName "1.0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            def releaseSettingGradleFile = new File("${project.rootDir}/app/signing/release.gradle")
            if (releaseSettingGradleFile.exists()) {
                apply from: releaseSettingGradleFile, to: android
            } else {
                throw new GradleException("Missing ${releaseSettingGradleFile.getAbsolutePath()} . Generate the file by copying and modifying ${project.rootDir}/app/signing/release.gradle.sample .")
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    androidExtensions {
        experimental = true
    }
    dataBinding.enabled = true
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

repositories {
    maven { url "https://jitpack.io" }
}

dependencies {
    def support_ver = '1.0.0'
    def aac_lifecycle_ver = '2.0.0'
    def aac_room_ver = '2.0.0'
    def aac_work_ver = '1.0.0-alpha09'
    def coroutines_ver = '0.30.0'
    def permission_dispatcher_ver = '3.3.1'
    def stetho_ver = '1.5.0'
    def glide_ver = '4.7.1'
    def exo_ver = '2.9.0'
    def exo_ext_ver = '2.7.0-1'

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
    implementation "androidx.legacy:legacy-support-core-ui:$support_ver"
    implementation "androidx.media:media:$support_ver"
    implementation "androidx.legacy:legacy-support-v13:$support_ver"
    implementation 'com.google.android.material:material:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'

    // Logging
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Inspect
    implementation "com.facebook.stetho:stetho:$stetho_ver"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_ver"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_ver"

    // JSON
    implementation 'com.google.code.gson:gson:2.8.5'

    // AAC ViewModel
    implementation "androidx.lifecycle:lifecycle-extensions:$aac_lifecycle_ver"
    kapt "androidx.lifecycle:lifecycle-compiler:$aac_lifecycle_ver"
    implementation "androidx.lifecycle:lifecycle-common-java8:$aac_lifecycle_ver"

    // AAC WorkManager
    implementation "android.arch.work:work-runtime:$aac_work_ver"
    implementation "android.arch.work:work-runtime-ktx:$aac_work_ver"

    // AAC Room
    implementation "androidx.room:room-runtime:$aac_room_ver"
    kapt "androidx.room:room-compiler:$aac_room_ver"
    androidTestImplementation "androidx.room:room-testing:$aac_room_ver"

    // Permission
    implementation "com.github.hotchemi:permissionsdispatcher:$permission_dispatcher_ver"
    kapt "com.github.hotchemi:permissionsdispatcher-processor:$permission_dispatcher_ver"

    // Image processing
    implementation "com.github.bumptech.glide:glide:$glide_ver"
    kapt "com.github.bumptech.glide:compiler:$glide_ver"

    // Player
    implementation "com.google.android.exoplayer:exoplayer-core:$exo_ver"
    implementation "com.github.PaulWoitaschek.ExoPlayer-Extensions:flac:$exo_ext_ver"
    implementation "com.github.PaulWoitaschek.ExoPlayer-Extensions:opus:$exo_ext_ver"
}
