plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlinx-serialization'
    id 'com.google.devtools.ksp'
    id 'kotlin-kapt'
}

kotlin {
    jvmToolchain 17
}

android {
    namespace "com.geckour.q"

    def keyNameDropBoxAppKey = "DROPBOX_APP_KEY"
    def keyNameDropBoxAppSecret = "DROPBOX_APP_SECRET"

    buildFeatures.buildConfig true

    compileSdk 34
    defaultConfig {
        applicationId "com.geckour.q"
        minSdk 24
        targetSdk 34
        versionCode 32
        versionName "2.9.6"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", keyNameDropBoxAppKey, getQuotedKey(keyNameDropBoxAppKey)
        buildConfigField "String", keyNameDropBoxAppSecret, getQuotedKey(keyNameDropBoxAppSecret)

        def filesAuthorityValue = applicationId + ".files"
        buildConfigField "String", "FILES_AUTHORITY", "\"${filesAuthorityValue}\""

        manifestPlaceholders = [
                dropboxAppKey : "db-" + getKey(keyNameDropBoxAppKey),
                filesAuthority: filesAuthorityValue
        ]
    }
    sourceSets.main {
        jniLibs.srcDir 'src/main/libs'
        // Disable the automatic ndk-build call by Android Studio.
    }
    signingConfigs {
        debug {
            keyAlias "AndroidDebugKey"
            keyPassword "android"
            storeFile file("${project.rootDir}/app/signing/debug.keystore")
            storePassword "android"
        }
        release {
            def releaseSettingGradleFile = new File("${project.rootDir}/app/signing/release.gradle")
            apply from: releaseSettingGradleFile, to: android
        }
    }
    buildTypes {
        debug {}
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    dataBinding.enabled = true
    kotlinOptions {
        freeCompilerArgs += ["-opt-in=kotlin.RequiresOptIn"]
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.5.8"
    }
    ksp {
        arg(new RoomSchemaArgProvider(new File(projectDir, "schemas")))
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/geckour/NowPlayingSubjectBuilder")

            credentials {
                username = getKey('gpr.usr')
                password = getKey('gpr.key')
            }
        }
    }
}

static def getKey(keyName) {
    Properties props = new Properties()
    props.load(new FileInputStream(new File("secret.properties")))
    return props[keyName]
}

static def quoted(value) {
    return "\"" + value + "\""
}

static def getQuotedKey(keyName) {
    return quoted(getKey(keyName))
}

repositories {
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.7"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation "androidx.media:media:1.7.0"
    implementation 'com.google.android.material:material:1.11.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation platform('com.google.firebase:firebase-bom:26.4.0')

    // DI
    implementation "io.insert-koin:koin-android:3.4.0"

    // Logging
    implementation 'com.google.firebase:firebase-core'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // JSON
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.0"

    // Networking
    def retrofit2_version = "2.9.0"
    def okhttp_version = "4.11.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // Preferences
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    // AAC ViewModel
    def aac_lifecycle_ver = '2.7.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$aac_lifecycle_ver"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$aac_lifecycle_ver"
    testImplementation 'androidx.arch.core:core-testing:2.2.0'

    // AAC Room
    def aac_room_ver = '2.6.1'
    implementation "androidx.room:room-runtime:$aac_room_ver"
    implementation "androidx.room:room-ktx:$aac_room_ver"
    ksp "androidx.room:room-compiler:$aac_room_ver"
    testImplementation "androidx.room:room-testing:$aac_room_ver"

    // AndroidX
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation "androidx.browser:browser:1.7.0"
    implementation "androidx.window:window:1.2.0"
    implementation "androidx.mediarouter:mediarouter:1.6.0"

    // KTX
    implementation 'androidx.fragment:fragment-ktx:1.6.2'
    implementation 'androidx.activity:activity-ktx:1.8.2'
    implementation "androidx.core:core-ktx:1.12.0"

    // WorkManager
    implementation 'androidx.work:work-runtime-ktx:2.9.0'

    // Permission
    implementation 'com.github.permissions-dispatcher:ktx:1.1.4'

    // Image processing
    implementation "io.coil-kt:coil-compose:2.5.0"

    // Player
    implementation project(':media-lib-session')
    implementation project(':media-lib-exoplayer')
    implementation project(':media-lib-decoder-ffmpeg')
    implementation project(':media-lib-ui')
    compileOnly 'org.checkerframework:checker-qual:3.13.0'
    compileOnly 'org.checkerframework:checker-compat-qual:2.5.5'

    // Compose
    implementation "androidx.compose.ui:ui:1.6.0"
    implementation "androidx.compose.material:material:1.6.0"
    implementation "androidx.compose.material3:material3:1.1.2"
    implementation "androidx.compose.material:material-icons-extended:1.6.0"
    debugImplementation "androidx.compose.ui:ui-tooling:1.6.0"
    implementation "androidx.compose.ui:ui-tooling-preview:1.6.0"
    implementation "androidx.activity:activity-compose:1.8.2"
    implementation "androidx.navigation:navigation-compose:2.7.6"
    implementation "androidx.compose.ui:ui-text-google-fonts:1.6.0"
    implementation "org.burnoutcrew.composereorderable:reorderable:0.9.6"

    // Hash
    implementation 'commons-codec:commons-codec:1.15'

    // Dropbox
    implementation 'com.dropbox.core:dropbox-core-sdk:5.4.6'

    // Audio Metadata
    implementation "net.jthink:jaudiotagger:3.0.1"

    // Billing
    implementation "com.android.billingclient:billing-ktx:6.1.0"

    // File Utils
    implementation "commons-io:commons-io:2.11.0"
}

class RoomSchemaArgProvider implements CommandLineArgumentProvider {

    @InputDirectory
    @PathSensitive(PathSensitivity.RELATIVE)
    File schemaDir

    RoomSchemaArgProvider(File schemaDir) {
        if (!schemaDir.exists()) schemaDir.mkdir()
        this.schemaDir = schemaDir
    }

    @Override
    Iterable<String> asArguments() {
        return ["room.schemaLocation=${schemaDir.path}".toString()]
    }
}

apply plugin: 'com.google.gms.google-services'

apply plugin: 'com.google.firebase.crashlytics'